
NOTES for the Race Conditions : -

All about race condition and Locks which we used where Thread object is used in our programme

* Critical Section is piece of the code that indulge into race conditions.

* Critical section consist of three steps :-

1. Fetch
2. Compute
3. Update

* When you guard a piece of code by acquiring a lock , then that code will be executed
sequentially only.


When two lock is applied at the same by creating two object , then it is bad behaviour we should avoid it

Object o1=new Object | Object o2=new Object() => Thread thread=new Thread(new Worker(NumbersStore,o1));
=> public Worker(NumbersStore numberStore,Object lock) => numberStores.increment(lock) => public NumberStores(Object lock)
=> synchronized(lock) { // critical sections part }